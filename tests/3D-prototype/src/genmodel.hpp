#pragma once

#include "data_types.hpp"

void genmodel(int& n_triangle, Vertex*& vertices)
{
	// an example model (cornell box)
	n_triangle = 32;
	Vertex v[] = {
		// tall block
		{4.23, 3.30, 2.47, 1, 0.0, 0.0},
		{2.65, 3.30, 2.96, 1, 0.0, 1.0},
		{3.14, 3.30, 4.56, 1, 1.0, 1.0},

		{4.23, 3.30, 2.47, 1, 0.0, 0.0},
		{3.14, 3.30, 4.56, 1, 1.0, 1.0},
		{4.72, 3.30, 4.06, 1, 1.0, 0.0},
		 
		{4.23, 0.00, 2.47, 1, 0.0, 0.0},
		{4.23, 3.30, 2.47, 1, 0.0, 1.0},
		{4.72, 3.30, 4.06, 1, 1.0, 1.0},

		{4.23, 0.00, 2.47, 1, 0.0, 0.0},
		{4.72, 3.30, 4.06, 1, 1.0, 1.0},
		{4.72, 0.00, 4.06, 1, 1.0, 0.0},
		 
		{4.72, 0.00, 4.06, 1, 0.0, 0.0},
		{4.72, 3.30, 4.06, 1, 0.0, 1.0},
		{3.14, 3.30, 4.56, 1, 1.0, 1.0},

		{4.72, 0.00, 4.06, 1, 0.0, 0.0},
		{3.14, 3.30, 4.56, 1, 1.0, 1.0},
		{3.14, 0.00, 4.56, 1, 1.0, 0.0},

		{3.14, 0.00, 4.56, 1, 0.0, 0.0},
		{3.14, 3.30, 4.56, 1, 0.0, 1.0},
		{2.65, 3.30, 2.96, 1, 1.0, 1.0},

		{3.14, 0.00, 4.56, 1, 0.0, 0.0},
		{2.65, 3.30, 2.96, 1, 1.0, 1.0},
		{2.65, 0.00, 2.96, 1, 1.0, 0.0},
		 
		{2.65, 0.00, 2.96, 1, 0.0, 0.0},
		{2.65, 3.30, 2.96, 1, 0.0, 1.0},
		{4.23, 3.30, 2.47, 1, 1.0, 1.0},

		{2.65, 0.00, 2.96, 1, 0.0, 0.0},
		{4.23, 3.30, 2.47, 1, 1.0, 1.0},
		{4.23, 0.00, 2.47, 1, 1.0, 0.0},

		// short block
		{1.30, 1.65, 0.65, 1, 0.0, 0.0}, 
		{0.82, 1.65, 2.25, 1, 0.0, 1.0},
		{2.40, 1.65, 2.72, 1, 1.0, 1.0},

		{1.30, 1.65, 0.65, 1, 0.0, 0.0}, 
		{2.40, 1.65, 2.72, 1, 1.0, 1.0},
		{2.90, 1.65, 1.14, 1, 1.0, 0.0},
		 
		{2.90, 0.00, 1.14, 1, 0.0, 0.0},
		{2.90, 1.65, 1.14, 1, 0.0, 1.0},
		{2.40, 1.65, 2.72, 1, 1.0, 1.0},

		{2.90, 0.00, 1.14, 1, 0.0, 0.0},
		{2.40, 1.65, 2.72, 1, 1.0, 1.0},
		{2.40, 0.00, 2.72, 1, 1.0, 0.0},

		{1.30, 0.00, 0.65, 1, 0.0, 0.0},
		{1.30, 1.65, 0.65, 1, 0.0, 1.0},
		{2.90, 1.65, 1.14, 1, 1.0, 1.0},

		{1.30, 0.00, 0.65, 1, 0.0, 0.0},
		{2.90, 1.65, 1.14, 1, 1.0, 1.0},
		{2.90, 0.00, 1.14, 1, 1.0, 0.0},
		 
		{0.82, 0.00, 2.25, 1, 0.0, 0.0},
		{0.82, 1.65, 2.25, 1, 0.0, 1.0},
		{1.30, 1.65, 0.65, 1, 1.0, 1.0},

		{0.82, 0.00, 2.25, 1, 0.0, 0.0},
		{1.30, 1.65, 0.65, 1, 1.0, 1.0},
		{1.30, 0.00, 0.65, 1, 1.0, 0.0},
		
		{2.40, 0.00, 2.72, 1, 0.0, 0.0},
		{2.40, 1.65, 2.72, 1, 0.0, 1.0},
		{0.82, 1.65, 2.25, 1, 1.0, 1.0},

		{2.40, 0.00, 2.72, 1, 0.0, 0.0},
		{0.82, 1.65, 2.25, 1, 1.0, 1.0},
		{0.82, 0.00, 2.25, 1, 1.0, 0.0},

		// left wall
		{5.528,   0.0,   0.0, 1, 0.0, 0.0},
		{5.496,   0.0, 5.592, 1, 0.0, 1.0},
		{5.560, 5.488, 5.592, 1, 1.0, 1.0},

		{5.528,   0.0,   0.0, 1, 0.0, 0.0},
		{5.560, 5.488, 5.592, 1, 1.0, 1.0},
		{5.560, 5.488,   0.0, 1, 1.0, 0.0},

		// right wall
		{0.0  ,   0.0, 5.592, 1, 0.0, 0.0},   
		{0.0  ,   0.0,   0.0, 1, 0.0, 1.0},
		{0.0  , 5.488,   0.0, 1, 1.0, 1.0},

		{0.0  ,   0.0, 5.592, 1, 0.0, 0.0},   
		{0.0  , 5.488,   0.0, 1, 1.0, 1.0},
		{0.0  , 5.488, 5.592, 1, 1.0, 0.0},

		// back wall
		{5.496,   0.0, 5.592, 1, 0.0, 0.0}, 
		{  0.0,   0.0, 5.592, 1, 0.0, 1.0},
		{  0.0, 5.488, 5.592, 1, 1.0, 1.0},

		{5.496,   0.0, 5.592, 1, 0.0, 0.0}, 
		{  0.0, 5.488, 5.592, 1, 1.0, 1.0},
		{5.560, 5.488, 5.592, 1, 1.0, 0.0},

		// light
		{3.430, 5.487, 2.270, 1, 0.0, 0.0},
		{3.430, 5.487, 3.320, 1, 0.0, 1.0},
		{2.130, 5.487, 3.320, 1, 1.0, 1.0},

		{3.430, 5.487, 2.270, 1, 0.0, 0.0},
		{2.130, 5.487, 3.320, 1, 1.0, 1.0},
		{2.130, 5.487, 2.270, 1, 1.0, 0.0},

		// ceiling
		{5.560, 5.488,   0.0, 1, 0.0, 0.0},   
		{5.560, 5.488, 5.592, 1, 0.0, 1.0},
		{  0.0, 5.488, 5.592, 1, 1.0, 1.0},

		{5.560, 5.488,   0.0, 1, 0.0, 0.0},   
		{  0.0, 5.488, 5.592, 1, 1.0, 1.0},
		{  0.0, 5.488,   0.0, 1, 1.0, 0.0},

		// floor
		{5.528,   0.0,   0.0, 1, 0.0, 0.0},   
		{  0.0,   0.0,   0.0, 1, 0.0, 1.0},
		{  0.0,   0.0, 5.592, 1, 1.0, 1.0},

		{5.528,   0.0,   0.0, 1, 0.0, 0.0},   
		{  0.0,   0.0, 5.592, 1, 1.0, 1.0},
		{5.496,   0.0, 5.592, 1, 1.0, 0.0},
	};

	assert(sizeof(Vertex)*n_triangle*3 == sizeof(v));
	vertices = new Vertex[n_triangle*3];
	memcpy(vertices, v, sizeof v);
}